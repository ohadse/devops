input {
      file {
          # Remember to fix the paths
          path => "<path to elk-workshop>/logstash/pipelines/httpd/data/access.mini.log"
          start_position => beginning
          codec => plain
          sincedb_path => "<path to elk-workshop>/logstash/pipelines/httpd/access.mini.sincedb"
      }
}

filter {
    grok {
        match => {
            # This is just one possible solution
            # Pre-defined patterns used, field names and descriptions:
            # IPORHOST - clientip - The IP address or fully qualified host name of the client making the request
# NOTSPACE - Used to skip HTTP authentication information in this expression, see the definition of the COMMONAPACHELOG pattern for more information
            # HTTPDATE - date - A pre-defined pattern for HTTP access log formatted dates
            # WORD - method - The HTTP method employed GET, POST, PUT, DELETE, etc.
            # URIPATH - request - The path part of the requested URI
            # NUMBER - httpversion - The HTTP version, 
            # NUMBER - bytes - The number of bytes in the result
            # QUOTEDSTRING - referrer - The referrer URI, which is included if a link is pressed
            # QUOTEDSTRING - useragent - Name and version information for the browser making the request
            "message" => "\A%{IPORHOST:clientip} %{NOTSPACE} %{NOTSPACE} \[%{HTTPDATE:date}] \"%{WORD:method} %{URIPATH:request} HTTP/%{NUMBER:httpversion}\" %{NUMBER:status} %{NUMBER:bytes} %{QUOTEDSTRING:referrer} %{QUOTEDSTRING:useragent}"
        }
    }
}

output {
    stdout {
        codec => rubydebug
    }
}
